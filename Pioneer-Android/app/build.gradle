import com.lee.pioneer.config.BuildConfig
import com.lee.pioneer.config.BuildDebug
import com.lee.pioneer.config.BuildRelease

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'build.config'
}

android {
    compileSdk BuildConfig.compileSdk

    defaultConfig {
        applicationId BuildConfig.applicationId
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        multiDexEnabled BuildConfig.multiDex

        //指定只支持中文字符
        resConfigs('zh-rCN')

        testInstrumentationRunner BuildConfig.TEST_INSTRUMENTATION_RUNNER

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file(BuildDebug.Signing.storeFile)
            storePassword BuildDebug.Signing.storePassword
            keyAlias BuildDebug.Signing.keyAlias
            keyPassword BuildDebug.Signing.keyPassword
        }
        release {
            storeFile file(BuildRelease.Signing.storeFile)
            storePassword BuildRelease.Signing.storePassword
            keyAlias BuildRelease.Signing.keyAlias
            keyPassword BuildRelease.Signing.keyPassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled BuildDebug.minifyEnabled //混淆模式
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled BuildRelease.zipAlignEnabled // Zipalign优化
        }
        release {
            minifyEnabled BuildRelease.minifyEnabled
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled BuildRelease.zipAlignEnabled
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kapt {
        generateStubs = true
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src/main/assets', 'src/main/assets/'
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
    }

}

dependencies {
    kapts.each { k, v -> kapt v }

    appModules.each { k, v -> implementation project(path: v) }

    implementation project(path: ':library:service')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
}
