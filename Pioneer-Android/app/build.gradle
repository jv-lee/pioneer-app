apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion "29.0.1"

    defaultConfig {
        applicationId androidId.applicationId
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        multiDexEnabled configs.multiDexEnabled

        //指定只支持中文字符
        resConfigs('zh-rCN')

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled configs.minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debugUri.each { k, v ->
                buildConfigField("String", k, "\"" + v + "\"")
            }
        }
        release {
            minifyEnabled configs.minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            releaseUri.each { k, v ->
                buildConfigField("String", k, "\"" + v + "\"")
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src/main/assets', 'src/main/assets/'
            }
        }
    }

    kapt {
        generateStubs = true
    }

}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    processor.each { k, v -> annotationProcessor v }
    kapts.each { k, v -> kapt v }
    implementation project(path: ':library')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
